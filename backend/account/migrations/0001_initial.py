# Generated by Django 2.2.17 on 2021-03-10 14:38

import account.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_role'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.EmailField(max_length=254, unique=True, verbose_name='username')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(default='nombre', max_length=50, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=50, verbose_name='last name')),
                ('date_joined', models.DateTimeField(auto_now_add=True, verbose_name='date joined')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='is staff')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='is superuser')),
                ('email_validated', models.BooleanField(default=False, verbose_name='email validate')),
                ('recovery_request', models.BooleanField(default=False, verbose_name='recovery request')),
                ('token_recovery', models.CharField(blank=True, max_length=256, verbose_name='token recovery')),
                ('token_email', models.CharField(blank=True, max_length=256, verbose_name='token validation')),
                ('user_type', models.CharField(blank=True, choices=[(1, 'Académico'), (2, 'Estudiante'), (3, 'Pequeño Propietario'), (4, 'Pyme'), (5, 'Gran Empresa'), (6, 'ONG'), (7, 'Organización o asociación'), (8, 'Otros usuarios')], default=1, max_length=2, verbose_name='type user')),
                ('gender', models.CharField(blank=True, choices=[(1, 'Femenino'), (2, 'Masculino')], default=1, max_length=2, verbose_name='gender')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', account.managers.UserManager()),
            ],
        ),
    ]
